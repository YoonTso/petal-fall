let controller: number;
let img = new Image();
img.src = "./images/petal.png";

class Sakura {
    constructor(
        public x: number,
        public y: number,
        public s: number,
        public r: number,
        public fn: any
    ) {
        this.x = x;
        this.y = y;
        this.s = s;
        this.r = r;
        this.fn = fn;
    }

    draw(cxt) {
        cxt.save();
        cxt.translate(this.x, this.y);
        cxt.rotate(this.r);
        cxt.drawImage(img, 0, 0, 40 * this.s, 40 * this.s);
        cxt.restore();
    }

    update() {
        this.x = this.fn.x(this.x);
        this.y = this.fn.y(this.y);
        this.r = this.fn.r(this.r);
        if (
            this.x > window.innerWidth ||
            this.x < 0 ||
            this.y > window.innerHeight ||
            this.y < 0
        ) {
            if (Math.random() > 0.4) {
                this.x = getRandom("x");
                this.y = 0;
                this.s = getRandom("s");
                this.r = getRandom("r");
            } else {
                this.x = window.innerWidth;
                this.y = getRandom("y");
                this.s = getRandom("s");
                this.r = getRandom("r");
            }
        }
    }
}

class SakuraList {
    list: Sakura[] = [];
    push(sakura: Sakura) {
        this.list.push(sakura);
    }

    update() {
        for (let i = 0, len = this.list.length; i < len; i++) {
            this.list[i].update();
        }
    }

    draw(ctx: CanvasRenderingContext2D) {
        for (let i = 0, len = this.list.length; i < len; i++) {
            this.list[i].draw(ctx);
        }
    }

    get(i: number) {
        return this.list[i];
    }

    size() {
        return this.list.length;
    }
}

function getRandom(option: string) {
    let ret, random;
    switch (option) {
        case "x":
            ret = Math.random() * window.innerWidth;
            break;
        case "y":
            ret = Math.random() * window.innerHeight;
            break;
        case "s":
            ret = Math.random();
            break;
        case "r":
            ret = Math.random() * 6;
            break;
        case "fnx":
            random = -0.5 + Math.random() * 1; // -0.5 ~ 0.5, -0.25 ~ 0.25
            ret = function (x: number) {
                return x + 0.5 * random - 1.7;
            };
            break;
        case "fny":
            random = 1.5 + Math.random() * 0.7;
            ret = function (y: number) {
                return y + random;
            };
            break;
        case "fnr":
            random = Math.random() * 0.03;
            ret = function (r: number) {
                return r + random;
            };
            break;
    }
    return ret;
}

function startSakura() {
    const canvas = document.createElement("canvas");
    canvas.height = window.innerHeight;
    canvas.width = window.innerWidth;
    canvas.style.position = "fixed";
    canvas.style.top = "0";
    canvas.style.left = "0";
    document.body.appendChild(canvas);
    const ctx = canvas.getContext("2d");
    const sakuraList = new SakuraList();
    for (let i = 0; i < 50; i++) {
        const randomX = getRandom("x");
        const randomY = getRandom("y");
        const randomR = getRandom("r");
        const randomS = getRandom("s");
        const randomFnx = getRandom("fnx");
        const randomFny = getRandom("fny");
        const randomFnR = getRandom("fnr");
        const sakura = new Sakura(randomX, randomY, randomS, randomR, {
            x: randomFnx,
            y: randomFny,
            r: randomFnR,
        });
        sakura.draw(ctx);
        sakuraList.push(sakura);
    }
    controller = requestAnimationFrame(function loop() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        sakuraList.update();
        sakuraList.draw(ctx);
        controller = requestAnimationFrame(loop);
    });
}

img.onload = function () {
    startSakura();
};
